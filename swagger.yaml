openapi: 3.0.0
info:
  title: Library API
  version: 1.0.0
  description: API for managing books in a library database.

servers:
  - url: http://localhost:5001
    description: Local development server

paths:
  /books:
    get:
      summary: Get all books
      operationId: getAllBooks
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: object
                properties:
                  info:
                    type: object
                    properties:
                      count:
                        type: integer
                        description: Number of books returned
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
    post:
      summary: Add a new book
      operationId: addBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  id:
                    type: integer
                    description: ID of the created book
        '400':
          description: Invalid input

  /books/{id}:
    get:
      summary: Get a book by ID
      operationId: getBookById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Details of a book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      summary: Update a book by ID
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Book updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Book not found

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        publication_date:
          type: string
        isbn:
          type: string
        description:
          type: string
    BookInput:
      type: object
      required:
        - title
        - author
        - publication_date
        - isbn
        - description
      properties:
        title:
          type: string
        author:
          type: string
        publication_date:
          type: string
        isbn:
          type: string
        description:
          type: string
